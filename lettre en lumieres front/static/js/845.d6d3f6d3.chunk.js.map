{"version":3,"file":"static/js/845.d6d3f6d3.chunk.js","mappings":"6KAMA,MA0DA,EA1DWA,IACP,MAAM,KAACC,EAAI,cAAEC,EAAa,MAAEC,EAAK,YAAEC,GAAeJ,GAC3CK,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,IAAIC,MAAM,GAAGC,KAAK,QAGnEC,EAAAA,EAAAA,YAAU,KAEcL,EAAaM,OAAMC,IAAyB,IAAbA,MAG/CV,IACAC,EAAM,KACV,GACD,CAACE,IAUJ,OAAOQ,EAAAA,EAAAA,MAACC,EAAAA,SAAc,CAAAC,SAAA,EACVF,EAAAA,EAAAA,MAAA,OAAMG,UAAU,qBAAoBD,SAAA,EAChCE,EAAAA,EAAAA,KAAA,OAAKC,IAAKC,EAAAA,EAASC,IAAI,MACvBH,EAAAA,EAAAA,KAAA,MAAAF,SAAS,OAAJd,QAAI,IAAJA,OAAI,EAAJA,EAAMoB,sBAGfJ,EAAAA,EAAAA,KAAA,MAAID,UAAU,OAAMD,SACfd,GAAQA,EAAKqB,OAAOC,KAAI,CAACC,EAAGC,KAAUZ,EAAAA,EAAAA,MAAA,OAAiBG,UAAS,GAAAU,OAAqB,OAAhBzB,EAAK0B,UAAmB,SAAUZ,SAAA,CAC9B,OAAhBd,EAAK0B,WAAoBV,EAAAA,EAAAA,KAAA,OAAKC,IAAG,wEAAAQ,OAA0EF,EAAEI,MACrER,IAAKI,EAAEK,MACPb,UAAU,aACVc,QAAUN,IACRA,EAAEO,OAAOb,IAAMd,CAAW,KAEpEa,EAAAA,EAAAA,KAAA,KACQD,UAAU,+BACVgB,QAASA,IAxBhEP,MACvBQ,EAAAA,EAAAA,GAAMhC,EAAKqB,OAAOG,GAAOI,OACzB,MAAMK,EAAsB7B,EAAakB,KAAI,CAACX,EAAUuB,IACpDA,IAAMV,GAAeb,IAEzBN,EAAgB4B,EAAoB,EAmBuDE,CAAkBX,GAAOV,SACvCS,EAAEK,UAVlBJ,QAerDR,EAAAA,EAAAA,KAAA,OAAKD,UAAU,mBAAkBD,UACjCE,EAAAA,EAAAA,KAAA,MAAID,UAAU,WAAUD,SACnBV,EAAakB,KAAI,CAACX,EAAUa,KAC3BR,EAAAA,EAAAA,KAAA,MAEID,UAAS,kBAAAU,QAAiC,IAAbd,EAAoB,wBAAsC,IAAbA,EAAqB,wBAA0B,KAFpHa,WAOF,C","sources":["components/sequences/Exercices/A.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport speak from \"../../../hooks/useSpeak\"\r\nimport speaker from '../../../assets/images/haut-parleur.svg'\r\n\r\n\r\n\r\nconst A = (props) => {\r\n    const {data, onAttemptMade, score, imgNotFound} = props;\r\n    const [tabResponses, setTabResponses] = useState(new Array(6).fill(null));\r\n\r\n    \r\n    useEffect(() => {\r\n        \r\n        const allListened = tabResponses.every(response => response === true);\r\n\r\n        if (allListened) {\r\n            onAttemptMade();\r\n            score(100);\r\n        }\r\n    }, [tabResponses]); // DÃ©pendances de l'effet\r\n\r\n    const handleChoiceClick = (index) => {\r\n        speak(data.choice[index].value);\r\n        const updatedTabResponses = tabResponses.map((response, i) => \r\n            i === index ? true : response\r\n        );\r\n        setTabResponses(updatedTabResponses);\r\n       \r\n    };\r\n    return <React.Fragment>\r\n                <div  className=\"exercice__consigne\">\r\n                    <img src={speaker} alt=\"\" />\r\n                    <h1>{data?.exo_instruction}</h1>\r\n                </div>\r\n                \r\n                <ul className=\"list\">\r\n                    {data && data.choice.map((e, index) => <div key={index} className={`${data.exo_type===\"A2\" && 'group'}`}>\r\n                                                                             {data.exo_type===\"A2\"  && <img src={`https://mtsene.lpmiaw.univ-lr.fr/lettrelumiere/public/images/choices/${e.file}`} \r\n                                                                                                                      alt={e.value} \r\n                                                                                                                      className=\"group__img\"\r\n                                                                                                                      onError={(e) => {\r\n                                                                                                                        e.target.src = imgNotFound;\r\n                                                                                                                      }}/>}\r\n                                                                              <p\r\n                                                                                      className=\"list__item list__item--sound\" \r\n                                                                                      onClick={()=>handleChoiceClick(index)}>\r\n                                                                                    {e.value}\r\n                                                                                </p>\r\n                                                                            </div>\r\n                                                                        )}\r\n                </ul>\r\n                <div className=\"exercice__footer\">\r\n                <ul className=\"progress\">\r\n                    {tabResponses.map((response, index) => (\r\n                      <li key={index} \r\n                        \r\n                          className={`progress__part ${response === true ? 'progress__part--true' : response === false ? 'progress__part--false' : ''}`}></li>\r\n                    ))}\r\n                </ul>\r\n                {/* <button className=\"layout__valid\" onClick={handleClick}>OK</button> */}\r\n            </div>\r\n            </React.Fragment>\r\n}\r\n\r\nexport default A;"],"names":["props","data","onAttemptMade","score","imgNotFound","tabResponses","setTabResponses","useState","Array","fill","useEffect","every","response","_jsxs","React","children","className","_jsx","src","speaker","alt","exo_instruction","choice","map","e","index","concat","exo_type","file","value","onError","target","onClick","speak","updatedTabResponses","i","handleChoiceClick"],"sourceRoot":""}