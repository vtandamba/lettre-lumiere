{"version":3,"file":"static/js/687.62189032.chunk.js","mappings":"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","sources":["assets/images/check.svg","components/sequences/Exercices/G.jsx"],"sourcesContent":["var _defs, _g, _text, _text2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgCheck(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    xmlSpace: \"preserve\",\n    style: {\n      shapeRendering: \"geometricPrecision\",\n      textRendering: \"geometricPrecision\",\n      imageRendering: \"optimizeQuality\"\n    },\n    viewBox: \"0 0 763 752.5\",\n    x: \"0px\",\n    y: \"0px\",\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\r\\n   \\r\\n    .fil0 {fill:white}\\r\\n   \\r\\n  \"))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"fil0\",\n    d: \"M65 370c55,41 125,102 166,159 222,-268 232,-311 483,-529l49 0c-218,185 -361,389 -482,586l-80 16c-9,-50 -160,-201 -201,-232l65 0z\"\n  }))), _text || (_text = /*#__PURE__*/React.createElement(\"text\", {\n    x: 0,\n    y: 617,\n    fill: \"#000000\",\n    fontSize: \"5px\",\n    fontWeight: \"bold\",\n    fontFamily: \"'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif\"\n  }, \"Created by Andy Mc\")), _text2 || (_text2 = /*#__PURE__*/React.createElement(\"text\", {\n    x: 0,\n    y: 622,\n    fill: \"#000000\",\n    fontSize: \"5px\",\n    fontWeight: \"bold\",\n    fontFamily: \"'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif\"\n  }, \"from the Noun Project\")));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCheck);\nexport default __webpack_public_path__ + \"static/media/check.ecf149c7bad9021580587be9fbf1b5aa.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { LinearCountdown, getElementRandom } from \"../../../hooks/useRandom\";\r\nimport speak from \"../../../hooks/useSpeak\";\r\nimport speaker from '../../../assets/images/haut-parleur.svg'\r\nimport checkIcon from '../../../assets/images/check.svg'\r\n\r\nconst G = (props) => {\r\n\r\n    const times = useRef(1);\r\n\r\n    const { data, score, onAttemptMade, isModalOpen, imgNotFound } = props;\r\n    const [tabItems, setTabItems] = useState([]);\r\n    const [displayItems, setDisplayItems] = useState( );\r\n    const [item, setItem] = useState('');\r\n    const [attemptCount, setAttemptCount] = useState(0);\r\n    const [tabResponses, setTabResponses] = useState(new Array(4).fill(null));\r\n\r\n                                                        \r\n  \r\n    useEffect(() => {\r\n        if (data?.choice || data?.rep_contenu) {\r\n            const initialDisplayItems = (data.choice|| data.choices).map(el => ({\r\n                value: el.value, \r\n                image: el.file,\r\n                state: 'initial'\r\n            }));\r\n            setDisplayItems(initialDisplayItems);\r\n        }\r\n    }, [data]); \r\n                      \r\n\r\n\r\n    const updateTabItems = useCallback(() => {\r\n      \r\n        if (displayItems?.length > 0) {\r\n\r\n            let newTabGraphemes = []; \r\n            for (let i = 0; i < 3; i++) {\r\n              let candidateItems = getElementRandom(displayItems);\r\n              if (!newTabGraphemes.includes(candidateItems)) {\r\n                newTabGraphemes.push(candidateItems);\r\n              }\r\n            \r\n            setTabItems(newTabGraphemes);\r\n            setItem(getElementRandom(newTabGraphemes)); \r\n           }\r\n        }\r\n         \r\n      }, [displayItems]);// Ajouter data?.content.choices comme dépendance\r\n    \r\n\r\n      useEffect(() => {\r\n        \r\n        updateTabItems();\r\n     }, [updateTabItems]);\r\n\r\n\r\n     useEffect(() => {\r\n        if (item) {\r\n            speak(item.value);\r\n         \r\n        }\r\n    }, [item]);\r\n\r\n    \r\n    const updateExercise = (isCorrect) => { //Sert à update le tableau des réponses et la barre de progression\r\n        setTabResponses(prev => {\r\n            const newResponses = [...prev];\r\n            newResponses[attemptCount] = isCorrect;\r\n            return newResponses;\r\n        });\r\n\r\n    \r\n        setAttemptCount(attemptCount + 1);\r\n    };\r\n\r\n    const handleClick = (index) => {\r\n\r\n\r\n        tabItems?.map((item) => {return {...item, state:'initial'}});\r\n\r\n        const secondes = document.querySelector('.exercice__count');\r\n     \r\n\r\n        if (times.current <= 4){\r\n            times.current += 1; // Incrémente times\r\n            \r\n             //Vérifie si l'élément sélectionné est faux ou pas et met le state de la bonne réponse à juste\r\n            const newTabItems = tabItems.map((el, idx) => {\r\n                if (idx === index) {\r\n                    const isCorrect = el.value === item.value;\r\n                    updateExercise(isCorrect);\r\n                    return { ...el, state: isCorrect ? 'true' : 'false' };\r\n                }\r\n                if (el.value === item){\r\n                    return {...el, state:'true'}\r\n                }\r\n                return el; \r\n            });\r\n            \r\n            setTabItems(newTabItems);\r\n\r\n\r\n            if (times.current <= 4 || secondes.textContent === false) {\r\n                setTimeout(() => {\r\n                    // evt.target.classList.remove('true', 'false');\r\n                    tabItems?.forEach((item) => {return{...item, state: 'initial'}});\r\n                    updateTabItems(); \r\n                    \r\n                }, 1000); \r\n             \r\n            } else {\r\n                const scorePercent = tabResponses.filter(el => el === true).length / tabResponses.length * 100; //Calule le score final basé sur le nombre de true\r\n                score(scorePercent);\r\n            \r\n                setTimeout(() => {\r\n                    tabItems?.forEach((item) => {return{...item, state: 'initial'}});\r\n                  \r\n                    \r\n                    onAttemptMade();\r\n                }, 1000); \r\n           \r\n            }\r\n           console.log('tabItem', tabItems);\r\n        }\r\n    }\r\n\r\n    const handleCountdownFinish = () => {\r\n    \r\n        if (!isModalOpen) { \r\n            const scorePercent = tabResponses.filter(el => el === true).length / tabResponses.length * 100;\r\n            score(scorePercent);\r\n          onAttemptMade();\r\n    \r\n        }\r\n      };\r\n      \r\n    return <React.Fragment>\r\n               <div  className=\"exercice__consigne\">\r\n                    <img src={speaker} alt=\"\" />\r\n                    <h1>{data?.exo_instruction}</h1>\r\n                </div>\r\n               <p className=\"exercice__count\">\r\n                 <LinearCountdown onCountdownFinish={handleCountdownFinish} />\r\n                </p>\r\n            <p className=\"exercice__sound\" onClick={() => speak(item.value)}>?</p>\r\n       \r\n            <ul className=\"list\">\r\n                {tabItems?.map((item, index) => {\r\n                    return <li className={`list__item ${item.state}`}\r\n                               key={index} \r\n                               onClick={()=>handleClick(index)}>{item.value}</li>;\r\n                })}\r\n            </ul>\r\n\r\n            <div className=\"exercice__footer\">\r\n            {  data.exo_type === \"G2\" && <img src={`${process.env.URL_IMG}${item.file}`} \r\n                                                                      alt={item.value}\r\n                                                                      className=\"exercice__img\"\r\n                                                                      style={{marginBottom:'1rem'}}\r\n                                                                      onError={(e) => {\r\n                                                                        e.target.src = imgNotFound;\r\n                                                                      }}/>}\r\n                <ul className=\"progress\">\r\n                    {tabResponses.map(response => (\r\n                        <li className={`${response === null ? 'progress__part' : response === true ? 'progress__part progress__part--true' : 'progress__part progress__part--false'}`}></li>\r\n                    ))}\r\n                </ul>\r\n                <button className=\"exercice__valid\" onClick={handleClick}>Ok <img src={checkIcon} alt=\"ok\" /></button>\r\n\r\n            </div>\r\n    </React.Fragment>\r\n}\r\n\r\nexport default G;"],"names":["props","times","useRef","data","score","onAttemptMade","isModalOpen","imgNotFound","tabItems","setTabItems","useState","displayItems","setDisplayItems","item","setItem","attemptCount","setAttemptCount","tabResponses","setTabResponses","Array","fill","useEffect","choice","rep_contenu","initialDisplayItems","choices","map","el","value","image","file","state","updateTabItems","useCallback","length","newTabGraphemes","i","candidateItems","getElementRandom","includes","push","speak","handleClick","index","secondes","document","querySelector","current","newTabItems","idx","isCorrect","prev","newResponses","updateExercise","textContent","setTimeout","forEach","scorePercent","filter","console","log","_jsxs","React","children","className","_jsx","src","speaker","alt","exo_instruction","LinearCountdown","onCountdownFinish","handleCountdownFinish","onClick","concat","exo_type","process","URL_IMG","style","marginBottom","onError","e","target","response","checkIcon"],"sourceRoot":""}