{"version":3,"file":"static/js/910.a39bcf54.chunk.js","mappings":"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","sources":["assets/images/check.svg","components/sequences/Exercices/B.jsx"],"sourcesContent":["var _defs, _g, _text, _text2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgCheck(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    xmlSpace: \"preserve\",\n    style: {\n      shapeRendering: \"geometricPrecision\",\n      textRendering: \"geometricPrecision\",\n      imageRendering: \"optimizeQuality\"\n    },\n    viewBox: \"0 0 763 752.5\",\n    x: \"0px\",\n    y: \"0px\",\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\r\\n   \\r\\n    .fil0 {fill:white}\\r\\n   \\r\\n  \"))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"fil0\",\n    d: \"M65 370c55,41 125,102 166,159 222,-268 232,-311 483,-529l49 0c-218,185 -361,389 -482,586l-80 16c-9,-50 -160,-201 -201,-232l65 0z\"\n  }))), _text || (_text = /*#__PURE__*/React.createElement(\"text\", {\n    x: 0,\n    y: 617,\n    fill: \"#000000\",\n    fontSize: \"5px\",\n    fontWeight: \"bold\",\n    fontFamily: \"'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif\"\n  }, \"Created by Andy Mc\")), _text2 || (_text2 = /*#__PURE__*/React.createElement(\"text\", {\n    x: 0,\n    y: 622,\n    fill: \"#000000\",\n    fontSize: \"5px\",\n    fontWeight: \"bold\",\n    fontFamily: \"'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif\"\n  }, \"from the Noun Project\")));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCheck);\nexport default __webpack_public_path__ + \"static/media/check.ecf149c7bad9021580587be9fbf1b5aa.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useState } from \"react\";\r\nimport speak from \"../../../hooks/useSpeak\";\r\nimport { getElementRandom } from \"../../../hooks/useRandom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheckDouble } from '@fortawesome/free-solid-svg-icons';\r\nimport checkIcon from '../../../assets/images/check.svg'\r\n\r\nconst B = (props) => {\r\n    const { data, onAttemptMade, score , imgNotFound} = props;\r\n    const [attemptCount, setAttemptCount] = useState(0);\r\n    const [answer, setAnswer] = useState(\"\");\r\n    const [selectedAnswer, setSelectedAnswer] = useState(\"\");\r\n    const [tabItems, setTabItems] = useState(data?.choiceDetails);\r\n    // const [score, setScore] = useState(0);\r\n    const [tabResponses, setTabResponses] = useState(new Array(tabItems.length).fill(null));\r\n \r\n    useEffect(() => {\r\n        if (data?.choiceDetails) {\r\n            const initialTabItems = data?.choiceDetails.map(el => ({\r\n               \r\n                value: el.value, \r\n                state: 'initial',\r\n                isAlreadyChosen: false\r\n            }));\r\n    \r\n       \r\n            setTabItems(initialTabItems);\r\n            selectNewAnswer(initialTabItems);  \r\n        }\r\n    }, [data?.choiceDetails]);\r\n\r\n    const selectNewAnswer = (items) => {\r\n        const availableChoices = items.filter(el => !el.isAlreadyChosen);\r\n        if (availableChoices.length > 0) {\r\n            const newAnswer = getElementRandom(availableChoices);\r\n            setAnswer(newAnswer);\r\n        \r\n            speak(newAnswer.value); // Assurez-vous de parler le nouvel item ici pour l'accessibilité\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (attemptCount > 0 && attemptCount < tabResponses.length ) {\r\n\r\n            const timer = setTimeout(() => {\r\n                \r\n                selectNewAnswer(tabItems);\r\n                resetTabItemsState(); //Réinitialise les états de tous les items\r\n            }, 1000);\r\n\r\n            return () => clearTimeout(timer);\r\n        } else if (attemptCount === tabResponses.length && attemptCount !== 0) {\r\n            onAttemptMade(); \r\n            const scorePercent = tabResponses.filter(el => el === true).length / tabResponses.length * 100; //Calule le score final basé sur le nombre de true\r\n            score(scorePercent);\r\n        }\r\n       \r\n    }, [attemptCount, onAttemptMade]);\r\n\r\n    useEffect(() => {\r\n        speak(answer.value);\r\n     \r\n    }, [answer]);\r\n\r\n    const handleChoose = (index) => {\r\n\r\n        const newTabItems = tabItems.map((item, idx) => {\r\n          return { ...item, state: idx === index ? 'choosen' : 'initial' }; \r\n        });\r\n        setTabItems(newTabItems);\r\n        setSelectedAnswer(tabItems[index].value);\r\n    };\r\n\r\n    \r\n\r\n    const handleClick = () => {\r\n    \r\n        if (!selectedAnswer || !answer) return;\r\n        const isCorrect = selectedAnswer?.toLowerCase() === answer?.value.toLowerCase();\r\n        setTabResponses(prev => {\r\n            const updatedResponses = [...prev];\r\n            updatedResponses[attemptCount] = isCorrect;\r\n            return updatedResponses;\r\n        });\r\n\r\n        setTabItems(prevItems => prevItems.map(item => {\r\n            if (item.value === answer.value) {\r\n                return { ...item, isAlreadyChosen: true, state: isCorrect ? 'true' : 'false' };\r\n            }\r\n            return item;\r\n        }));\r\n    \r\n        const newTabItems = tabItems.map(item => {\r\n            if (item.value.toLowerCase() === selectedAnswer.toLowerCase()) {\r\n                return {\r\n                    ...item,\r\n                    state: isCorrect ? 'true' : 'false'\r\n                };\r\n            }\r\n            return item;\r\n        });\r\n        setTabItems(newTabItems);\r\n    \r\n        setTimeout(() => {\r\n            resetTabItemsState();\r\n        }, 1000);\r\n    \r\n   \r\n        setAttemptCount(prevAttemptCount => prevAttemptCount + 1);\r\n        // setScore(prevScore => isCorrect ? prevScore + 1 : prevScore);\r\n    };\r\n    \r\n\r\n    const resetTabItemsState = () => {\r\n        const resetItems = tabItems.map(item => ({\r\n            ...item,\r\n            state: 'initial'\r\n        }));\r\n        setTabItems(resetItems);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <p className=\"exercice__consigne\">{data.exo_instruction}</p>\r\n            <div>\r\n                {data.exo_type === 'B2' ? \r\n                                        <img src={'https://mtsene.lpmiaw.univ-lr.fr/lettrelumiere/public/images/choices/' + answer.file } \r\n                                             alt=\"\" \r\n                                             className=\"exercice__img\"  \r\n                                             onClick={() => speak(answer.value)}\r\n                                             onError={(e) => {\r\n                                                e.target.src = imgNotFound;\r\n                                              }}/>\r\n                                        :<p className=\"exercice__sound\" onClick={() => speak(answer.value)}>?</p>}\r\n            </div>\r\n           \r\n            <ul className=\"list\">\r\n                {tabItems?.map((e, index) => (\r\n                  <li key={index} className={`list__item ${e.state}`} onClick={() => handleChoose(index)}>\r\n                    {e.value}\r\n                  </li>\r\n                ))}\r\n            </ul>\r\n            <div className=\"exercice__footer\">\r\n                <ul className=\"progress\">\r\n                    {tabResponses.map((response, index) => (\r\n                      <li key={index} className={`progress__part ${response === true ? 'progress__part--true' : response === false ? 'progress__part--false' : ''}`}></li>\r\n                    ))}\r\n                </ul>\r\n                <button className=\"exercice__valid\" onClick={handleClick}>Ok <img src={checkIcon} alt=\"ok\" /></button>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default B;\r\n"],"names":["props","data","onAttemptMade","score","imgNotFound","attemptCount","setAttemptCount","useState","answer","setAnswer","selectedAnswer","setSelectedAnswer","tabItems","setTabItems","choiceDetails","tabResponses","setTabResponses","Array","length","fill","useEffect","initialTabItems","map","el","value","state","isAlreadyChosen","selectNewAnswer","items","availableChoices","filter","newAnswer","getElementRandom","speak","timer","setTimeout","resetTabItemsState","clearTimeout","scorePercent","resetItems","item","_jsxs","React","children","_jsx","className","exo_instruction","exo_type","src","file","alt","onClick","onError","e","target","index","concat","newTabItems","idx","handleChoose","response","handleClick","isCorrect","toLowerCase","prev","updatedResponses","prevItems","prevAttemptCount","checkIcon"],"sourceRoot":""}