{"version":3,"file":"static/js/420.b34a7692.chunk.js","mappings":"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","sources":["assets/images/check.svg","components/sequences/Exercices/D.jsx"],"sourcesContent":["var _defs, _g, _text, _text2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgCheck(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    xmlSpace: \"preserve\",\n    style: {\n      shapeRendering: \"geometricPrecision\",\n      textRendering: \"geometricPrecision\",\n      imageRendering: \"optimizeQuality\"\n    },\n    viewBox: \"0 0 763 752.5\",\n    x: \"0px\",\n    y: \"0px\",\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\r\\n   \\r\\n    .fil0 {fill:white}\\r\\n   \\r\\n  \"))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"fil0\",\n    d: \"M65 370c55,41 125,102 166,159 222,-268 232,-311 483,-529l49 0c-218,185 -361,389 -482,586l-80 16c-9,-50 -160,-201 -201,-232l65 0z\"\n  }))), _text || (_text = /*#__PURE__*/React.createElement(\"text\", {\n    x: 0,\n    y: 617,\n    fill: \"#000000\",\n    fontSize: \"5px\",\n    fontWeight: \"bold\",\n    fontFamily: \"'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif\"\n  }, \"Created by Andy Mc\")), _text2 || (_text2 = /*#__PURE__*/React.createElement(\"text\", {\n    x: 0,\n    y: 622,\n    fill: \"#000000\",\n    fontSize: \"5px\",\n    fontWeight: \"bold\",\n    fontFamily: \"'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif\"\n  }, \"from the Noun Project\")));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCheck);\nexport default __webpack_public_path__ + \"static/media/check.ecf149c7bad9021580587be9fbf1b5aa.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useState } from \"react\";\r\nimport speak from \"../../../hooks/useSpeak\";\r\nimport { IoArrowForwardSharp } from \"react-icons/io5\";\r\nimport { getElementRandom } from \"../../../hooks/useRandom\";\r\nimport checkIcon from '../../../assets/images/check.svg'\r\n\r\n\r\nconst D = (props) => {\r\n  \r\n    const { data, onAttemptMade, score, imgNotFound } = props;\r\n    const [item, setItem] = useState();\r\n    console.log(data)\r\n    // const [tabItems, setTabItems] = useState();\r\n    // const [validate, setValidate] = useState(false);\r\n    const [allItemsWithStyles, setAllItemsWithStyles] = useState(data?.choiceDetails);\r\n    const [tabResponses, setTabResponses] = useState(new Array(allItemsWithStyles.length).fill(null));\r\n    const [attemptCount, setAttemptCount] = useState(0);\r\n    const [answerAlreadyTaken, setAnswerAlreadyTaken] = useState([]);\r\n\r\n    const shuffleArray = (array) => { //Algorithme de mélange de Fisher-Yates \r\n        for (let i = array?.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n    };\r\n\r\n    const prepareItemsWithoutShuffling = (items) => {\r\n        return items.flatMap(item => [\r\n          { ...item, style: \"list__item--uppercase\", value: item.value.toUpperCase() },\r\n          { ...item,style: \"list__item--lowercase\", value: item.value },\r\n          { ...item,style: \"list__item--belleallure\", value: item.value }\r\n        ]);\r\n      };\r\n   \r\n\r\n\r\n      useEffect(() => {\r\n        const init = () => {\r\n          let choices = data?.choiceDetails.map(el => ({\r\n            value: el.value,\r\n            image: el.image,\r\n            state: 'initial',\r\n            isAlreadyChosen: false\r\n          }));\r\n    \r\n          shuffleArray(choices); // Mélangez les choix en place\r\n          choices = [...choices]; // Créez une nouvelle référence pour le tableau\r\n         \r\n          // Suppression de la double utilisation erronée de getElementRandom\r\n          let newItem = getElementRandom(data?.choiceDetails);\r\n          while (answerAlreadyTaken.includes(newItem)) {\r\n              const filteredChoices = data?.choiceDetails.filter(choice => !answerAlreadyTaken.includes(choice));\r\n              newItem = getElementRandom(filteredChoices);\r\n          }\r\n   \r\n          setItem({...newItem, isAlreadyChosen:false});\r\n\r\n\r\n            choices = prepareItemsWithoutShuffling(choices);\r\n            shuffleArray(choices);//Faire un shuffle pour les différents éléments du tableau\r\n            setAllItemsWithStyles(choices);\r\n  \r\n        };\r\n      \r\n        if (data) {\r\n            init();  \r\n        }\r\n    }, [data]);\r\n\r\n  \r\n\r\n            \r\n    useEffect(() => {\r\n       \r\n        if (item)\r\n        {\r\n            speak(item.value);\r\n           \r\n        }      \r\n    }, [item])\r\n\r\n \r\n    useEffect(() => {\r\n        if (attemptCount  === tabResponses.length){\r\n            onAttemptMade(); //Passser à l'exercice suivant\r\n            console.log('essaies terminés');\r\n            const scorePercent = tabResponses.filter(el => el === true).length / tabResponses.length * 100; //Calule le score final basé sur le nombre de true\r\n            score(scorePercent); // Envoyer le score au composant parent\r\n           \r\n        }\r\n     \r\n    }, [attemptCount, tabResponses.length])\r\n\r\n    const handleChooseResponse = () => {\r\n        if (attemptCount < tabResponses.length) {\r\n            const allItemsChosen = allItemsWithStyles.filter(el => el.state === 'choosen');\r\n          \r\n            if (allItemsChosen.length > 0) {\r\n\r\n                const updatedItems = allItemsWithStyles.map(el => {  //Mettre à vrai ou faux les items correspondant\r\n                   \r\n                    if (el.state === 'choosen') {\r\n                        return {\r\n                            ...el,\r\n                            state: el.value.toLowerCase() === item.value.toLowerCase() ? 'true' : 'false',\r\n                        };\r\n                    } else {\r\n\r\n                        return {\r\n                            ...el,\r\n                            state: el.value.toLowerCase() === item.value.toLowerCase() ? 'true' : el.state,\r\n                        };\r\n                    }\r\n                });\r\n                setAllItemsWithStyles(updatedItems); //L'assigner pour le nouvel affichage\r\n    \r\n                const timeOutId = setTimeout(() => {\r\n                    setTabResponses(prev => {\r\n                        const newTabResponses = [...prev];\r\n                        newTabResponses[attemptCount] = allItemsChosen.some(el => el.value.toLowerCase() === item.value);\r\n                        return newTabResponses;\r\n                    });\r\n        \r\n                    setAttemptCount(prevCount => {\r\n                        if (prevCount + 1 < tabResponses.length) {\r\n                            //Prochain essaie\r\n                            setItem(getElementRandom(data?.choiceDetails));\r\n                        }\r\n                        return prevCount + 1;\r\n                    });\r\n        \r\n                    resetAllItemsState();\r\n                }, 1000);\r\n                return ()=> clearTimeout(timeOutId)\r\n            }\r\n        }\r\n    };\r\n\r\n    function resetAllItemsState() {\r\n        setAllItemsWithStyles(currentItems =>\r\n            currentItems.map(item => ({ ...item, state: 'initial' }))\r\n        );\r\n    }\r\n\r\n\r\n \r\n\r\n    const clickResponse = (clickedIndex) => {\r\n        // const tab = allItemsWithStyles.map(el => el.state='choosen');\r\n        // setAllItemsWithStyles(tab)\r\n        const allItemsChosen = allItemsWithStyles.filter(el => el.state === 'choosen');\r\n            if (allItemsChosen.length < 3){\r\n                setAllItemsWithStyles(currentItems =>\r\n                    currentItems.map((item, index) => {\r\n                    if (index === clickedIndex){\r\n                        return {\r\n                            ...item,\r\n                            state: item.state === 'initial' ? 'choosen' : 'initial',\r\n                        };\r\n                    }\r\n                        return item;\r\n                    })\r\n                \r\n                );\r\n            }\r\n    };\r\n\r\n\r\n    return <React.Fragment>\r\n                <h2 className=\"exercice__consigne\">{data.exo_instruction}</h2>\r\n                {data.exo_type === \"D1\" \r\n                                ? <p className=\"exercice__sound\" onClick={()=>speak(item.value)}>?</p> \r\n                                : <img src={`https://mtsene.lpmiaw.univ-lr.fr/lettrelumiere/public/images/choices/${item?.file}`} \r\n                                       alt=\"item\" \r\n                                       className=\"exercice__img\"\r\n                                       onClick={()=>speak(item.value)}\r\n                                       onError={(evt)=>{ evt.target.src = imgNotFound}}\r\n                />}\r\n                <ul className=\"list\">\r\n                    {allItemsWithStyles?.map((item, index) => (\r\n                        \r\n                        <li className={`list__item ${item.style} ${item.state}`} \r\n                            key={index} \r\n                            onClick={()=>clickResponse(index)}\r\n                        >\r\n                            {item.value}\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n\r\n\r\n                <div className=\"exercice__footer\">\r\n                    <ul className=\"progress\">\r\n                        {tabResponses.map(response => (\r\n                            <li className={`${response === null ? 'progress__part' : response === true ? 'progress__part progress__part--true' : 'progress__part progress__part--false'}`}></li>\r\n                        ))}\r\n                    </ul>\r\n                    <button className=\"exercice__valid\" onClick={handleChooseResponse}>Ok <img src={checkIcon} alt=\"ok\" /></button>\r\n                </div>\r\n            </React.Fragment>\r\n}\r\n\r\nexport default D;"],"names":["props","data","onAttemptMade","score","imgNotFound","item","setItem","useState","console","log","allItemsWithStyles","setAllItemsWithStyles","choiceDetails","tabResponses","setTabResponses","Array","length","fill","attemptCount","setAttemptCount","answerAlreadyTaken","setAnswerAlreadyTaken","shuffleArray","array","i","j","Math","floor","random","useEffect","init","choices","map","el","value","image","state","isAlreadyChosen","newItem","getElementRandom","includes","filteredChoices","filter","choice","flatMap","style","toUpperCase","speak","scorePercent","_jsxs","React","children","_jsx","className","exo_instruction","exo_type","onClick","src","concat","file","alt","onError","evt","target","index","clickResponse","clickedIndex","currentItems","response","handleChooseResponse","allItemsChosen","updatedItems","toLowerCase","timeOutId","setTimeout","prev","newTabResponses","some","prevCount","clearTimeout","checkIcon"],"sourceRoot":""}