{"version":3,"file":"static/js/102.8ae3d903.chunk.js","mappings":"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","sources":["assets/images/check.svg","components/DragItem.js","components/DropZone.js","components/DropZones.js","components/DropGuide.js","components/Drag.js","components/sequences/Exercices/H.jsx"],"sourcesContent":["var _defs, _g, _text, _text2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgCheck(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    xmlSpace: \"preserve\",\n    style: {\n      shapeRendering: \"geometricPrecision\",\n      textRendering: \"geometricPrecision\",\n      imageRendering: \"optimizeQuality\"\n    },\n    viewBox: \"0 0 763 752.5\",\n    x: \"0px\",\n    y: \"0px\",\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\r\\n   \\r\\n    .fil0 {fill:white}\\r\\n   \\r\\n  \"))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"fil0\",\n    d: \"M65 370c55,41 125,102 166,159 222,-268 232,-311 483,-529l49 0c-218,185 -361,389 -482,586l-80 16c-9,-50 -160,-201 -201,-232l65 0z\"\n  }))), _text || (_text = /*#__PURE__*/React.createElement(\"text\", {\n    x: 0,\n    y: 617,\n    fill: \"#000000\",\n    fontSize: \"5px\",\n    fontWeight: \"bold\",\n    fontFamily: \"'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif\"\n  }, \"Created by Andy Mc\")), _text2 || (_text2 = /*#__PURE__*/React.createElement(\"text\", {\n    x: 0,\n    y: 622,\n    fill: \"#000000\",\n    fontSize: \"5px\",\n    fontWeight: \"bold\",\n    fontFamily: \"'Helvetica Neue', Helvetica, Arial-Unicode, Arial, Sans-serif\"\n  }, \"from the Noun Project\")));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgCheck);\nexport default __webpack_public_path__ + \"static/media/check.ecf149c7bad9021580587be9fbf1b5aa.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\n\r\n// context\r\nimport { DragContext } from './Drag';\r\n\r\n\r\n// a draggable item\r\nfunction DragItem({ as, dragId, dragType, ...props }) {\r\n  const { draggable, dragStart, drag, dragEnd } = React.useContext(DragContext);\r\n\r\n  let Component = as || \"div\";\r\n  return <Component onDragStart={(e) => dragStart(e, dragId, dragType)} onDrag={drag} draggable={draggable} onDragEnd={dragEnd} {...props} />;\r\n};\r\n\r\nexport default DragItem;","import React from 'react';\r\n\r\n// context\r\nimport {DragContext} from './Drag';\r\n\r\n// listens for drags over drop zones\r\nfunction DropZone({ as, dropId, dropType, remember, style, children, ...props }) {\r\n  const { dragItem, dragType, setDrop, drop, onDrop } = React.useContext(DragContext);\r\n  \r\n  function handleDragOver(e) {\r\n    if (e.preventDefault) {\r\n      e.preventDefault();\r\n      console.log(\"Drag Over DropZone: \", dropId);\r\n    }\r\n    return false;\r\n  };\r\n\r\n  function handleLeave() {\r\n    if (!remember) {\r\n      setDrop(null); \r\n    }\r\n  };\r\n\r\n  const handleDragEnter = (e) => {\r\n    if (dragItem && dropType === dragType) {\r\n      setDrop(dropId);\r\n      // Log pour voir quand et quel dropId est défini\r\n      console.log(\"Drag Enter, setting drop: \", dropId);\r\n    }\r\n  };\r\n\r\n\r\n  let Component = as || \"div\";\r\n  return ( \r\n    <Component onDragEnter={handleDragEnter} onDragOver={handleDragOver}  onDrop={onDrop} style={{position: \"relative\", ...style}} {...props}>\r\n      { children }\r\n      { drop === dropId && <div style={{position: \"absolute\", inset: \"0px\"}} onDragLeave={handleLeave}></div> }\r\n    </Component>\r\n  );\r\n};\r\n\r\nexport default DropZone;\r\n","import React from 'react';\r\nimport DropZone from './DropZone';\r\n\r\n// context\r\nimport {DragContext} from './Drag';\r\n\r\n// if we need multiple dropzones\r\nfunction DropZones({ dropType, prevId, nextId, split = \"y\", remember, children, ...props }) {\r\n  const { dragType, isDragging } = React.useContext(DragContext);\r\n  return (\r\n    <div style={{position: \"relative\"}} {...props}>\r\n      { children }\r\n      { dragType === dropType && isDragging &&\r\n        <div style={{position: \"absolute\", inset: \"0px\", display: \"flex\", flexDirection: split === \"x\" ? \"row\" : \"column\" }}>\r\n          <DropZone dropId={prevId} style={{ width: \"100%\", height: \"100%\" }} dropType={dropType} remember={remember} />\r\n          <DropZone dropId={nextId} style={{ width: \"100%\", height: \"100%\" }} dropType={dropType} remember={remember} />\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DropZones;","import React from 'react';\r\n\r\n// context\r\nimport {DragContext} from './Drag';\r\n\r\n// indicates where the drop will go when dragging over a dropzone\r\nfunction DropGuide({ as, dropId, ...props }) {\r\n  const { drop } = React.useContext(DragContext);\r\n  let Component = as || \"div\";\r\n  return drop === dropId ? <Component {...props} /> : null;\r\n};\r\n\r\nexport default DropGuide;","import React from 'react';\r\n\r\n// sub-components\r\nimport DragItem from './DragItem';\r\nimport DropZone from './DropZone';\r\nimport DropZones from './DropZones';\r\nimport DropGuide from './DropGuide';\r\n\r\n// context for the drag\r\nexport const DragContext = React.createContext();\r\n\r\n// drag context component\r\nfunction Drag({ draggable = true, handleDrop, children }) {\r\n  const [dragItem, setDragItem] = React.useState(null); \r\n  const [dragType, setDragType] = React.useState(null); \r\n  const [isDragging, setIsDragging] = React.useState(null); \r\n  const [drop, setDrop] = React.useState(null); \r\n\r\n  React.useEffect(() => {\r\n    if (dragItem) {\r\n      document.body.style.cursor = \"grabbing\"; \r\n    } else {\r\n      document.body.style.cursor = \"default\"; \r\n    }\r\n  }, [dragItem]); \r\n  \r\n  const dragStart = function(e, dragId, dragType) {\r\n    e.stopPropagation();\r\n    e.dataTransfer.effectAllowed = 'move';\r\n    setDragItem(dragId);\r\n    setDragType(dragType);\r\n  };\r\n\r\n  const drag = function(e, dragId, dragType) {\r\n    e.stopPropagation();\r\n    setIsDragging(true);\r\n  };\r\n\r\n  const dragEnd = function() {\r\n    setDragItem(null);\r\n    setDragType(null);\r\n    setIsDragging(false);\r\n    setDrop(null);\r\n  };\r\n\r\n  const onDrop = function(e) {\r\n    e.preventDefault();\r\n    handleDrop({ dragItem, dragType, drop });\r\n    setDragItem(null);\r\n    setDragType(null);\r\n    setIsDragging(false);\r\n    setDrop(null);\r\n  };\r\n\r\n  return (\r\n    <DragContext.Provider value={{ draggable, dragItem, dragType, isDragging, dragStart, drag, dragEnd, drop, setDrop, onDrop }}>\r\n      { typeof children === \"function\" ? children({ activeItem: dragItem, activeType: dragType, isDragging }) : children }\r\n    </DragContext.Provider>\r\n  );\r\n};\r\n\r\n// export Drag and assign sub-components\r\nexport default Object.assign(Drag, { DragItem, DropZone, DropZones, DropGuide });","import React, { useEffect, useState } from \"react\";\r\nimport Drag from \"../../Drag\";\r\nimport { getElementRandom, shuffleArray } from \"../../../hooks/useRandom\";\r\nimport checkIcon from '../../../assets/images/check.svg'\r\nimport speak from \"../../../hooks/useSpeak\";\r\n\r\n\r\nconst H = (props) => {\r\n\r\n    const { data, imgNotFound , score, onAttemptMade} = props;\r\n    const [tabItems, setTabItems] = useState(data?.choiceDetails);\r\n    const [answer, setAnswer] = useState();\r\n    const [attemptCount, setAttemptCount] = useState(0);\r\n    const [showModel, setShowModel] = useState(false);\r\n    const [allData, setAllData] = useState([]);\r\n    const words = [\"exemple\", \"vélo\", \"test\", \"barbe\", \"consumer\", \"fléchir\", \"provoquer\"];\r\n\r\n    // État pour stocker les réponses (tentatives) de l'utilisateur\r\n    const [tabResponses, setTabResponses] = useState(new Array(5).fill(null));\r\n\r\n    const initializeGame = () => {\r\n      const randomWord = getElementRandom(words);\r\n      setAnswer(randomWord);\r\n\r\n      const letters = randomWord.split('');\r\n      const firstLetter = letters.shift(); // Supprime la première lettre du mot\r\n      const shuffledLetters = shuffleArray(letters); // Mélange les lettres restantes\r\n\r\n      setAllData([\r\n          { id: 1, name: \"List 1\", cards: shuffledLetters.map((letter, index) => ({ id: index + 1, name: letter })) },\r\n          { id: 2, name: \"List 2\", cards: [{ id: 115, name: firstLetter }] },\r\n      ]);\r\n  };\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n         initializeGame();\r\n    }, [tabResponses])\r\n\r\n    useEffect(() => {\r\n      if (attemptCount  === tabResponses.length){\r\n          onAttemptMade(); //Passser à l'exercice suivant\r\n          console.log('essaies terminés');\r\n          const scorePercent = tabResponses.filter(el => el === true).length / tabResponses.length * 100; //Calule le score final basé sur le nombre de true\r\n          score(scorePercent); // Envoyer le score au composant parent\r\n         \r\n      }\r\n   \r\n  }, [attemptCount, tabResponses.length])\r\n\r\n  useEffect(() => {\r\n       \r\n    if (answer)\r\n    {\r\n        speak(answer);\r\n    }      \r\n}, [answer])\r\n\r\n    const handleSubmit = (event) => {\r\n\r\n      if (attemptCount < tabResponses.length) {\r\n\r\n        event.preventDefault();\r\n      \r\n        const isCorrect = allData[1].cards\r\n                                    .map(el => el.name)\r\n                                    .join('')\r\n                                    .toUpperCase() === answer.toUpperCase();\r\n        console.log('reponse correcte', isCorrect);\r\n      \r\n\r\n        const newTabResponses = [...tabResponses];\r\n        newTabResponses[attemptCount] = isCorrect;\r\n        setTabResponses(newTabResponses);\r\n        setAttemptCount(attemptCount + 1);\r\n      \r\n        if (data.exo_type.startsWith('H')){\r\n          setShowModel(true);\r\n          const timer = setTimeout(() => {\r\n              if (answer) {\r\n                  setShowModel(false);\r\n                  speak(answer);\r\n              }\r\n          }, 3000);\r\n          return () => clearTimeout(timer);\r\n        }\r\n      }\r\n      \r\n  };\r\n\r\n    function handleDrop({ dragItem, dragType, drop }) {\r\n        console.log(drop)\r\n        if (dragType === \"card\" && drop) { // Vérifier que `drop` n'est pas null\r\n          \r\n          console.log(drop)\r\n          let [newListPosition, newCardPosition] = drop.split(\"-\").map((string) => parseInt(string));\r\n          \r\n          // Copie des données\r\n          let newData = structuredClone(allData); // deep clone\r\n          // Trouver la current position\r\n          let oldCardPosition;\r\n          let oldListPosition = allData.findIndex((list) => {\r\n            oldCardPosition = list.cards.findIndex((card) => card.id === dragItem);\r\n            return oldCardPosition >= 0;\r\n          });\r\n      \r\n          // Trouver la card\r\n          let card = allData[oldListPosition].cards[oldCardPosition];\r\n         \r\n          if (newListPosition === oldListPosition && oldCardPosition < newCardPosition) {\r\n            newCardPosition--; \r\n          }\r\n          \r\n          newData[oldListPosition].cards.splice(oldCardPosition, 1);\r\n       \r\n          newData[newListPosition].cards.splice(newCardPosition, 0, card);\r\n         \r\n          setAllData(newData);\r\n        }\r\n        else {\r\n          \r\n          console.log(\"Drop information is missing or incorrect.\");\r\n        }\r\n      };\r\n      \r\n\r\nreturn (\r\n  <>\r\n         <h2 className=\"exercice__consigne\">{data?.exo_instruction}</h2>\r\n      {data.exo_type !== \"H1\" \r\n                                ? <p className=\"exercice__sound\" onClick={()=>speak(answer)}>?</p> \r\n                                : <img src={`https://mtsene.lpmiaw.univ-lr.fr/lettrelumiere/public/images/choices${answer?.value}.jpg`} \r\n                                       alt=\"item\" \r\n                                       className=\"exercice__img\"\r\n                                       onClick={()=>speak(answer.value)}\r\n                                       onError={(evt)=>{ evt.target.src = imgNotFound}}\r\n                />\r\n             \r\n                }\r\n      {\r\n          showModel && <p className=\"list__item\">{answer}</p>\r\n      }\r\n      <div className=\"p-10 flex flex-col max-w-full\">\r\n        \r\n        <Drag handleDrop={handleDrop}>\r\n          {({ activeItem, activeType, isDragging }) => (\r\n            <Drag.DropZone className=\"flex flex-col justify-center items-center -mx-2 \">\r\n              {allData && allData?.map((list, listPosition) => {\r\n                return (\r\n                  <React.Fragment key={list.id}>\r\n                    <Drag.DropZone dropId={listPosition} dropType=\"list\" remember={true}>\r\n                      <Drag.DropGuide dropId={listPosition} dropType=\"list\" className=\"rounded-xl bg-gray-200 h-96 mx-2 my-5 shrink-0 grow-0\" />\r\n                    </Drag.DropZone>\r\n                    <Drag.DropZones className=\"flex flex-row justify-center items-center\" prevId={listPosition} nextId={listPosition+1} dropType=\"list\" split=\"x\" remember={true}>\r\n                      <Drag.DragItem dragId={list.id} className={`cursor-pointer flex ${activeItem === list.id && activeType === \"list\" && isDragging ? \"hidden\" : \"translate-x-0\"}`} dragType=\"list\">\r\n                        <ul name={list.name}  className={`list rounded-xl bg-gray-100  my-5 shadow${ activeItem === list.id && activeType === \"list\" ? \" rotate-6\" : \"\"}`}>\r\n                          {allData[listPosition].cards.map((card, cardPosition) => {\r\n                            return (\r\n                              <Drag.DropZones key={card.id} prevId={`${listPosition}-${cardPosition}`} nextId={`${listPosition}-${cardPosition+1}`} dropType=\"card\" remember={true}>\r\n                                <Drag.DropGuide dropId={`${listPosition}-${cardPosition}`} className=\"rounded-lg bg-gray-200 w-24 m-2\" dropType=\"card\" />\r\n                                <Drag.DragItem dragId={card.id} className={`cursor-pointer ${activeItem === card.id && activeType === \"card\" && isDragging ? \"hidden\" : \"translate-x-0\"}`} dragType=\"card\">\r\n                                  <li className={`list__item rounded-lg bg-white border border-gray-300 shadow-sm p-5 m-2${ activeItem === card.id && activeType === \"card\" ? \" rotate-6\" : \"\"}`}>\r\n                                    {card.name}\r\n                                  </li>\r\n                                </Drag.DragItem>\r\n                              </Drag.DropZones>\r\n                            );\r\n                          })}\r\n                          <Drag.DropZone dropId={`${listPosition}-${allData[listPosition].cards.length}`} dropType=\"card\" remember={true}>\r\n                            <Drag.DropGuide dropId={`${listPosition}-${allData[listPosition].cards.length}`} className=\"rounded-lg bg-gray-200 w-24 m-2\" dropType=\"card\" />\r\n                          </Drag.DropZone>\r\n                        </ul>\r\n                      </Drag.DragItem>\r\n                      <Drag.DropZone dropId={`${listPosition}-${allData[listPosition].cards.length}`} className=\"grow\" dropType=\"card\" remember={true} />\r\n                    </Drag.DropZones>\r\n                  </React.Fragment>\r\n                );\r\n              })}\r\n              <Drag.DropZone dropId={allData?.length} dropType=\"list\" remember={true}>\r\n                <Drag.DropGuide dropId={allData?.length} dropType=\"list\" className=\"rounded-xl bg-gray-200 mx-2 my-5 w-80 shrink-0 grow-0\" />\r\n              </Drag.DropZone>\r\n            </Drag.DropZone>\r\n          )}\r\n        </Drag>\r\n\r\n        </div>\r\n            <div className=\"exercice__footer\">\r\n            <ul className=\"progress\">\r\n                {tabResponses.map((response, index) => (\r\n                    <li key={index} className={`${response === null ? 'progress__part' : response === true ? 'progress__part progress__part--true' : 'progress__part progress__part--false'}`}></li>\r\n                ))}\r\n            </ul>\r\n            <button type=\"submit\" className=\"exercice__valid\" onClick={handleSubmit}>Ok <img src={checkIcon} alt=\"ok\" /></button>\r\n      </div>\r\n  </>\r\n);\r\n\r\n\r\n}\r\n\r\nexport default H;\r\n"],"names":["_ref","as","dragId","dragType","props","draggable","dragStart","drag","dragEnd","React","DragContext","Component","_jsx","onDragStart","e","onDrag","onDragEnd","dropId","dropType","remember","style","children","dragItem","setDrop","drop","onDrop","_jsxs","onDragEnter","console","log","onDragOver","preventDefault","position","inset","onDragLeave","prevId","nextId","split","isDragging","display","flexDirection","DropZone","width","height","Object","assign","handleDrop","setDragItem","setDragType","setIsDragging","document","body","cursor","Provider","value","stopPropagation","dataTransfer","effectAllowed","activeItem","activeType","DragItem","DropZones","DropGuide","data","imgNotFound","score","onAttemptMade","tabItems","setTabItems","useState","choiceDetails","answer","setAnswer","attemptCount","setAttemptCount","showModel","setShowModel","allData","setAllData","words","tabResponses","setTabResponses","Array","fill","useEffect","initializeGame","randomWord","getElementRandom","letters","firstLetter","shift","shuffledLetters","shuffleArray","id","name","cards","map","letter","index","length","scorePercent","filter","el","speak","_Fragment","className","exo_instruction","exo_type","onClick","src","concat","alt","onError","evt","target","Drag","oldCardPosition","newListPosition","newCardPosition","string","parseInt","newData","structuredClone","oldListPosition","findIndex","list","card","splice","_ref2","listPosition","cardPosition","response","type","event","isCorrect","join","toUpperCase","newTabResponses","startsWith","timer","setTimeout","clearTimeout","checkIcon"],"sourceRoot":""}