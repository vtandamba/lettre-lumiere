{"version":3,"file":"static/js/845.12df16dd.chunk.js","mappings":"6KAMA,MAsDA,EAtDWA,IACP,MAAM,KAACC,EAAI,cAAEC,EAAa,MAAEC,EAAK,YAAEC,GAAeJ,GAC3CK,EAAcC,IAAmBC,EAAAA,EAAAA,UAAS,IAAIC,MAAM,GAAGC,KAAK,QAGnEC,EAAAA,EAAAA,YAAU,KAEcL,EAAaM,OAAMC,IAAyB,IAAbA,MAG/CV,IACAC,EAAM,KACV,GACD,CAACE,IAUJ,OAAOQ,EAAAA,EAAAA,MAACC,EAAAA,SAAc,CAAAC,SAAA,EACVC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,qBAAoBF,SAAM,OAAJd,QAAI,IAAJA,OAAI,EAAJA,EAAMiB,mBAC1CF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,OAAMF,SACfd,GAAQA,EAAKkB,cAAcC,KAAI,CAACC,EAAGC,KAAUT,EAAAA,EAAAA,MAAA,OAAiBI,UAAS,GAAAM,OAAqB,OAAhBtB,EAAKuB,UAAmB,SAAUT,SAAA,CACrC,OAAhBd,EAAKuB,WAAoBR,EAAAA,EAAAA,KAAA,OAAKS,IAAG,wEAAAF,OAA0EF,EAAEK,MACrEC,IAAKN,EAAEO,MACPX,UAAU,aACVY,QAAUR,IACRA,EAAES,OAAOL,IAAMrB,CAAW,KAEpEY,EAAAA,EAAAA,KAAA,KACQC,UAAU,+BACVc,QAASA,IApBhET,MACvBU,EAAAA,EAAAA,GAAM/B,EAAKkB,cAAcG,GAAOM,OAChC,MAAMK,EAAsB5B,EAAae,KAAI,CAACR,EAAUsB,IACpDA,IAAMZ,GAAeV,IAEzBN,EAAgB2B,EAAoB,EAeuDE,CAAkBb,GAAOP,SACvCM,EAAEO,UAVXN,QAe5DN,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mBAAkBF,UACjCC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,WAAUF,SACnBV,EAAae,KAAI,CAACR,EAAUU,KAC3BN,EAAAA,EAAAA,KAAA,MAEIC,UAAS,kBAAAM,QAAiC,IAAbX,EAAoB,wBAAsC,IAAbA,EAAqB,wBAA0B,KAFpHU,WAOF,C","sources":["components/sequences/Exercices/A.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport speak from \"../../../hooks/useSpeak\"\r\nimport { diviserEnSyllabes } from \"../../../hooks/useRandom\";\r\n\r\n\r\nconst A = (props) => {\r\n    const {data, onAttemptMade, score, imgNotFound} = props;\r\n    const [tabResponses, setTabResponses] = useState(new Array(6).fill(null));\r\n\r\n    \r\n    useEffect(() => {\r\n        \r\n        const allListened = tabResponses.every(response => response === true);\r\n\r\n        if (allListened) {\r\n            onAttemptMade();\r\n            score(100);\r\n        }\r\n    }, [tabResponses]); // DÃ©pendances de l'effet\r\n\r\n    const handleChoiceClick = (index) => {\r\n        speak(data.choiceDetails[index].value);\r\n        const updatedTabResponses = tabResponses.map((response, i) => \r\n            i === index ? true : response\r\n        );\r\n        setTabResponses(updatedTabResponses);\r\n       \r\n    };\r\n    return <React.Fragment>\r\n                <h1 className=\"exercice__consigne\">{data?.exo_instruction}</h1>\r\n                <ul className=\"list\">\r\n                    {data && data.choiceDetails.map((e, index) => <div key={index} className={`${data.exo_type===\"A2\" && 'group'}`}>\r\n                                                                             {data.exo_type===\"A2\"  && <img src={`https://mtsene.lpmiaw.univ-lr.fr/lettrelumiere/public/images/choices/${e.file}`} \r\n                                                                                                                      alt={e.value} \r\n                                                                                                                      className=\"group__img\"\r\n                                                                                                                      onError={(e) => {\r\n                                                                                                                        e.target.src = imgNotFound;\r\n                                                                                                                      }}/>}\r\n                                                                              <p\r\n                                                                                      className=\"list__item list__item--sound\" \r\n                                                                                      onClick={()=>handleChoiceClick(index)}>\r\n                                                                                    {e.value}\r\n                                                                                </p>\r\n                                                                            </div>\r\n                                                                        )}\r\n                </ul>\r\n                <div className=\"exercice__footer\">\r\n                <ul className=\"progress\">\r\n                    {tabResponses.map((response, index) => (\r\n                      <li key={index} \r\n                        \r\n                          className={`progress__part ${response === true ? 'progress__part--true' : response === false ? 'progress__part--false' : ''}`}></li>\r\n                    ))}\r\n                </ul>\r\n                {/* <button className=\"layout__valid\" onClick={handleClick}>OK</button> */}\r\n            </div>\r\n            </React.Fragment>\r\n}\r\n\r\nexport default A;"],"names":["props","data","onAttemptMade","score","imgNotFound","tabResponses","setTabResponses","useState","Array","fill","useEffect","every","response","_jsxs","React","children","_jsx","className","exo_instruction","choiceDetails","map","e","index","concat","exo_type","src","file","alt","value","onError","target","onClick","speak","updatedTabResponses","i","handleChoiceClick"],"sourceRoot":""}